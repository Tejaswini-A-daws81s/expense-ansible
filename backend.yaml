- name: configure the backend server
  hosts: backend
  become: yes
  vars:
    mysql_root_password: ExpenseApp@1
    login_host: mysql.devops81.online
  tasks:
    - name: disable nodejs module
      ansible.builtin.command: dnf module disable nodejs -y

    - name: enable nodejs 20 module
      ansible.builtin.command: dnf module enable nodejs:20 -y

    - name: install nodejs
      ansible.builtin.package:
        name: "{{ item }}"
        state: present
      loop:
      - nodejs
      - mysql     

    - name: create expense user
      ansible.builtin.user:
        name: expense

    - name: Create a app directory 
      ansible.builtin.file:
        path: /app
        state: directory    

    - name: Download the backend code
      ansible.builtin.get_url:
        url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
        dest: /tmp/backend.zip

    - name: Extract backend code
      ansible.builtin.unarchive:
        src: /tmp/backend.zip
        dest: /app
        remote_src: yes     

    - name: install dependencies
      ansible.builtin.command: npm install
      args:
        chdir: /app      

    - name: Copy backend service file
      ansible.builtin.copy:
        src: backend.service
        dest: /etc/systemd/system/backend.service 

    - name: ansible to install pymysql
      ansible.builtin.pip:
        name:
        - PyMySQL
        - cryptography
        executable: pip3.9      


    - name: import mysql data
      community.mysql.mysql_info:
        login_user: root
        login_password: "{{ mysql_root_password }}"
        login_host: "{{ login_host }}"
        target: /app/schema/backend.sql
        name: all
        state: import 

    - name: daemon reload
      ansible.builtin.systemd_service:
        daemon_reload: true
        state: restarted
        name: backend    